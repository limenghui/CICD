Kubernetes
重要概念
1.CLuster 是计算、存储和网络资源的计划，Kubernetes利用这些资源运行各种基于容器的应用
  Master 是Cluster的大脑，主要职责是调度，即决定将应用放在哪里运行 
  Node 职责是运行容器应用，Node由Master管理，Node负责监控并汇报容器的状态，同时根据Master的要求管理容器的生命周期
  Pod  是Kubernetes的最小工作单元，每个Pod包含一个或多个容器，Pod中的容器会昨晚一个整体被Master调度到一个Node上运行
  Controller  Kubernetes通常不会直接创建Pod,而是通过Controller来管理Pod.Controller中定义了Pod的不熟特性，比如有几个副本，在什么样的Node上运行
  Service  Kubernetes Service定义了外界访问一组特定Pod的方式，Service 有自己的IP和端口，Service为Pod提供了负载均衡
  Namespace  Namespace可以将一个物理的Cluster逻辑上划分成多个虚拟Cluster，每个Cluster就是一个Namespace，不同Namespace里的资源是完全隔离的

Tips:
    Kubernetes 运行容器（Pod）与访问容器（Pod）这两项任务分别由Controller和Service执行


CLuster中的几个重要概念
1.安装kubelet、kubeadm、kubectl
   kubelet: 运行在Cluster的所有节点上，负责启动Pod和容器
   kubeadm: 用于初始化Cluster
   kubectl: 是Kubernetes命令行工具，通过kubectl可以部署和管理应用，查看各种资源，创建、删除和更新各种组件

Kubernetes架构
1. Master 是 Kubernetes Cluster的大脑，运行着的Daemon服务包括kube-apiserver，kube-schedule、kube-controller-manager、etcd和Pod网络
    API Server(kube-apiserver)
        提供HTTP/HTTPS RESTful API,即 Kubernetes API。API Server是 Kubernetes Cluster的前端接口，各种客户端工具（CLI或UI）以及Kubernetes其他组件可以通过管理Cluster的各种资源
    Schedule（kube-scheduler）
        Scheduler负责觉得将Pod放在哪个Node上运行，Scheduler在调度时会重复考虑Cluster的拓扑结构，当前各个节点的负载，以及应用对高可用、性能、数据亲和性的需求

    Controller Manager（kube-controller-manager）
        Controller Manager负责管理Cluster各种资源，保证各种资源处于预期的状态
    etcd
        etcd负责保存Kubernetes Cluster 的配置信息和各种资源的状态信息，当数据发生变化时，etcd会快速的通知Kubernetes相关组件
